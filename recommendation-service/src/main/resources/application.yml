server:
  port: 7002
  error.include-message: always

app.eureka-server: localhost

spring:
  application.name: recommendation
  data.mongodb:
      host: localhost
      port: 27017
      database: recommendationdb
  cloud:
    function.definition: messageProcessor
    stream:
      default-binder: rabbit
      default.contentType: application/json
      bindings:
        messageProcessor-in-0:
          destination: recommendations
          group: recommendationsGroup
          consumer:
            max-attempts: 3
            back-off-initial-interval: 500
            back-off-max-interval: 1000
            back-off-multiplier: 2.0
      rabbit.bindings:
          messageProcessor-in-0:
            consumer:
              auto-bind-dlq: true
              republish-to-dlq: true
      kafka:
        bindings:
          messageProcessor-in-0:
            consumer:
              enable-dlq: true
        binder:
          brokers: 127.0.0.1
          defaultBrokerPort: 9092

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest

eureka:
  client:
    service-url:
      default-zone: http://${app.eureka-server}:8761/eureka/
    initial-instance-info-replication-interval-seconds: 5
    registry-fetch-interval-seconds: 5
  instance:
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 5

logging:
  level:
    root: info
    org.tbl.microdaddy: debug
    org.springframework.data.mongodb.core.ReactiveMongoTemplate: debug

management:
  endpoint.health.show-details: always
  endpoints.web.exposure.include: "*"

---
spring:
  config.activate.on-profile: docker
  data.mongodb.host: mongodb
  rabbitmq.host: rabbitmq
  cloud.stream.kafka.binder.brokers: kafka

server.port: 8080

app.eureka-server: eureka

---
spring:
  config.activate.on-profile: streaming_partitioned
  cloud.stream.bindings:
    messageProcessor-in-0:
      consumer:
        partitioned: true
        instance-count: 2

---
spring:
  config.activate.on-profile: streaming_instance_0
  cloud.stream.bindings:
    messageProcessor-in-0:
      consumer:
        instance-index: 0

---
spring:
  config.activate.on-profile: streaming_instance_1
  cloud.stream.bindings:
    messageProcessor-in-0:
      consumer:
        instance-index: 1

---
spring:
  config.activate.on-profile: kafka
  cloud:
    stream:
      default-binder: kafka
      kafka.binder.replication-factor: 1
  kafka:
    bootstrap-servers: kafka:9092

management.health.rabbit.enabled: false