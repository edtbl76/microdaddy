version: '2.1'

services:
  product:
    build: product-service
    image: microdaddy/product-service
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_0
      - CONFIG_SERVER_USR=username
      - CONFIG_SERVER_PWD=password
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  product-p2:
    build: product-service
    image: microdaddy/product-service
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_1
      - CONFIG_SERVER_USR=username
      - CONFIG_SERVER_PWD=password
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  recommendation:
    build: recommendation-service
    image: microdaddy/recommendation-service
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_0
      - CONFIG_SERVER_USR=username
      - CONFIG_SERVER_PWD=password
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  recommendation-p2:
    build: recommendation-service
    image: microdaddy/recommendation-service
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_1
      - CONFIG_SERVER_USR=username
      - CONFIG_SERVER_PWD=password
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  review:
    build: review-service
    image: microdaddy/review-service
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_0
      - CONFIG_SERVER_USR=username
      - CONFIG_SERVER_PWD=password
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  review-p2:
    build: review-service
    image: microdaddy/review-service
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_1
      - CONFIG_SERVER_USR=username
      - CONFIG_SERVER_PWD=password
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  product-composite:
    build: product-composite-service
    image: microdaddy/product-composite-service
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned
      - CONFIG_SERVER_USR=username
      - CONFIG_SERVER_PWD=password
    depends_on:
      rabbitmq:
        condition: service_healthy
      auth-server:
        condition: service_healthy

  mongodb:
    image: mongo:6.0.6
    mem_limit: 512m
    ports:
      - "27017:27017"
    command: mongod
    healthcheck:
      test: "mongosh --eval 'db.stats().ok'"
      interval: 5s
      timeout: 2s
      retries: 60

  mysql:
    image: mysql:8.0.33
    mem_limit: 512m
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=reviewdb
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    healthcheck:
      test: "/usr/bin/mysql --user=user --password=password --execute \"SHOW DATABASES;\""
      interval: 5s
      timeout: 2s
      retries: 60

  rabbitmq:
    image: rabbitmq:3.12.0-management
    mem_limit: 512m
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 2s
      retries: 60

  gateway:
    build: gateway
    image: microdaddy/gateway
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_USR=username
      - CONFIG_SERVER_PWD=password
    ports:
      - "8443:8443"
    depends_on:
      auth-server:
        condition: service_healthy

  auth-server:
    build: authz
    image: microdaddy/auth-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_USR=username
      - CONFIG_SERVER_PWD=password
    mem_limit: 512m
    healthcheck:
      test: [ "CMD", "curl", "-fs", "http://localhost/actuator/health" ]
      interval: 5s
      timeout: 2s
      retries: 60

  config-server:
    build: config-server
    image: microdaddy/config-server
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker,native
      - ENCRYPT_KEY=my_encryption_key
      - SPRING_SECURITY_USER_NAME=username
      - SPRING_SECURITY_USER_PASSWORD=password
    volumes:
      - $PWD/config-repo:/config-repo

  zipkin:
    image: openzipkin/zipkin:2.24.2
    mem_limit: 1024m
    environment:
      - STORAGE_TYPE=mem
    ports:
      - "9411:9411"
    depends_on:
      rabbitmq:
        condition: service_healthy